name: Deploy to Firebase App Distribution

on:
  pull_request:
    branches: [ master ]
    types: [ closed ]

jobs:
  deploy_android_app:
    if: github.event.pull_request.merged == true
    name: ðŸš€ Deploy to Firebase App Distribution
    runs-on: ubuntu-latest
    env:
      TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Set up local.properties
        run: |
          echo "sdk.dir=/usr/local/lib/android/sdk" > local.properties
          
      - name: Grant rights to gradlew
        run: chmod +x ./gradlew

      - name: Increment Version Code and Version Name
        run: |
          # Get the current versionCode and versionName from build.gradle
          VERSION_CODE=$(grep versionCode app/build.gradle.kts | awk '{print $2}')
          VERSION_NAME=$(grep versionName app/build.gradle.kts | awk '{print $2}' | sed "s/\"//g")

          # Increment versionCode by 1
          VERSION_CODE=$((VERSION_CODE + 1))

          # Update the versionCode and versionName in build.gradle.kts
          sed -i "s/versionCode .*/versionCode $VERSION_CODE/" app/build.gradle.kts
          sed -i "s/versionName \".*\"/versionName \"$VERSION_NAME\"/" app/build.gradle.kts

          echo "Updated versionCode to $VERSION_CODE, versionName to $VERSION_NAME"

      - name: Build app
        run: ./gradlew assembleDebug --stacktrace

      - name: Find current directory
        run: pwd

      - name: Check if APK exists
        run: |
          ls -R

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Create custom release notes based on the version
          RELEASE_NOTES="Release notes for version $VERSION_NAME (Build $VERSION_CODE)."
          
          # You can extend this logic to pull commit messages or other information
          echo "::set-output name=release_notes::$RELEASE_NOTES"

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
          groups: testers
          file: app/build/outputs/apk/debug/app-debug.apk
          releaseNotes: ${{ steps.release_notes.outputs.release_notes }}
